import { track } from "ripple"
import type { PropsWithChildren } from "ripple";

const NODES = [
  'a',
  'button',
  'div',
  'form',
  'h2',
  'h3',
  'img',
  'input',
  'label',
  'li',
  'nav',
  'ol',
  'p',
  'select',
  'span',
  'svg',
  'ul',
] as const;

type Primitives = { [E in (typeof NODES)[number]]: PrimitiveProps<E> };

type PrimitiveProps<T extends object = {}> = PropsWithChildren<{ asChild?: boolean }>

/*
    <Primitive.div />
    <Primitive.button />
*/
export const Primitive = NODES.reduce(
    (primitive, node) => {
        component Node({children, asChild, ...props} : PrimitiveProps){
            let tag = track(node);
            if(asChild) {
                <@children {...@props} />
            }
            else {
                <@tag {...@props}>
                    <@children />
                </@tag> 
            }
        }
        return {
            ...primitive, [node]: Node
        }
    }, {} as Primitives
)