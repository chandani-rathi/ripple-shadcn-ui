import * as ripple from 'ripple';
import { Primitive } from "@/primitive.ripple";

function render(component, target) {
    ripple.mount(component, {
		target
	});
}

test("Primitive UI", () => {
    let container = document.createElement('div');
    Object.keys(Primitive).forEach(
        node => {
            render(Primitive[node], container);
            expect(container.children[0]).toMatchSnapshot()
        }
    )
});

test("should attributes and event works", () => {
    let container = document.createElement('div');
    const onClick = vi.fn();
    component Test(){
        <Primitive.button id="test" data-state="open" onClick={onClick}>
            {"Test"}
        </Primitive.button>
    }
    render(Test, container);
    const button = container.querySelector("#test");
    expect(button.id).toBe("test");
    expect(button).toHaveAttribute('data-state', 'open')
    button.click();
    expect(onClick).toHaveBeenCalled(1);
})


test("should pros spread works", () => {
    let container = document.createElement('div');
    const onClick = vi.fn();
    component Test(){
        const props = { id: 'test', ["data-state"]: "open", onClick:onClick }
        <Primitive.button {...props} >
            {"Test"}
        </Primitive.button>
    }
    render(Test, container);
    const button = container.querySelector("#test");
    expect(button.id).toBe("test");
    expect(button).toHaveAttribute('data-state', 'open')
    button.click();
    expect(onClick).toHaveBeenCalled(1);
})