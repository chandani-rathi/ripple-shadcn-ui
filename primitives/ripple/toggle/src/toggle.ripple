import { track, trackSplit, effect } from "ripple";
import { composeEventHandlers } from '@ripple-primitives/primitive';
import { Primitive } from "@ripple-primitives/primitive-ui";
import { UseControllableState, ControllableState } from '@ripple-primitives/use-controllable-state';

const NAME = 'Toggle';

export component Toggle({ pressed, defaultPressed, onPressedChange, children, ...buttonProps}){
    const Children = track(() => @children);
    <ControllableState 
      prop={pressed} 
      defaultProp={defaultPressed ?? false} 
      caller={NAME} 
      onChange={onPressedChange} 
      {...buttonProps}
    >
      component children({ state, ...childProps }) {
        <Primitive.button 
          {...childProps}
          type="button"
          aria-pressed={!!@state}
          data-state={@state ? 'on' : 'off'}
          data-disabled={childProps.disabled ? '' : undefined}
          onClick={composeEventHandlers(childProps.onClick || (() => {}), () => {
            if (!childProps.disabled) {
              @state = !@state
            }
          })}
        >
          component children(childProps2) {
            <@Children {...childProps2} />
          }
        </Primitive.button>
      }
    </ControllableState>

    
}