import type { Component } from 'ripple';
import { cn } from "@/lib/utils"

export component Card(props: { $children: Component, $class: string }) {
	<div
        data-slot="card"
        $class={cn(
            "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm", 
            props.$class
        )}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}

export component CardHeader(props: { $children: Component, $class: string }) {
	<div 
        data-slot="card-header"
        $class={cn(
            "@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6", 
            props.$class
        )}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}

export component CardTitle(props: { $children: Component, $class: string }) {
	<div 
        data-slot="card-title"
        $class={cn(
            "leading-none font-semibold", 
            props.$class
        )}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}

export component CardDescription(props: { $children: Component, $class: string }) {
	<div 
        data-slot="card-description"
        $class={cn(
            "text-muted-foreground text-sm", 
            props.$class
        )}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}


export component CardAction(props: { $children: Component, $class: string }) {
	<div 
        data-slot="card-action"
        $class={cn(
            "col-start-2 row-span-2 row-start-1 self-start justify-self-end", 
            props.$class
        )}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}

export component CardContent(props: { $children: Component, $class: string }) {
	<div 
        data-slot="card-content"
        $class={cn("px-6",props.$class)}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}

export component CardFooter(props: { $children: Component, $class: string }) {
	<div 
        data-slot="card-footer"
        $class={cn("flex items-center px-6 [.border-t]:pt-6", props.$class)}>
        if(props.$children) {
            const $children = props.$children;
            <$children />
        }
    </div>
}